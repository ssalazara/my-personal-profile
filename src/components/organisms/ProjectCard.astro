---
// src/components/organisms/ProjectCard.astro
export interface Props {
  title: string;
  description?: string;
  url: string; // This can now be an internal (/projects/slug) or external (https://...) URL
  linkText?: string;
}

const { title, description, url, linkText = "View Project â†’" } = Astro.props;

// Determine if the URL is external to add target="_blank" for better UX
const isExternal = url.startsWith('http');
---
<article class="project-card">
  <h3 class="project-card__title">{title}</h3>
  {description && <p class="project-card__description">{description}</p>}
  
  <!-- The link now uses the dynamic 'url' prop and checks if it's external -->
  <a 
    href={url} 
    class="project-card__link"
    target={isExternal ? '_blank' : '_self'}
    rel={isExternal ? 'noopener noreferrer' : ''}
  >
    {linkText}
  </a>
</article>

<style>
  /* Styles remain the same, so no changes are needed here. */
  .project-card {
    background: var(--color-background-card);
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid var(--color-border-primary);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05), 0 2px 4px -2px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  }
  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.07), 0 4px 6px -4px rgba(0, 0, 0, 0.07);
  }
  .project-card__title {
    margin-top: 0;
    color: var(--color-text-primary);
    font-size: 1.25rem;
  }
  .project-card__description {
    color: var(--color-text-secondary);
    line-height: 1.6;
  }
  .project-card__link {
    display: inline-block;
    margin-top: 1rem;
    color: var(--color-text-link);
    text-decoration: none;
    font-weight: bold;
  }
  .project-card__link:hover {
    text-decoration: underline;
    color: var(--color-text-link-hover);
  }
</style>